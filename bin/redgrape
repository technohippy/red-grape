#!/usr/bin/env ruby
$: << File.expand_path('../../lib', __FILE__)
require 'red_grape'
require 'irb'
require 'irb/completion'

module RedGrape
  module Help
    module_function

    def redgrape?(key=nil)
      case key
      when NilClass
        puts help_message
        :OK
      when 'pipe', 'pipes', :pipe, :pieps
        puts pipe_help_message
        :OK
      else
        puts '?'
        :NG
      end
    end

    def help_message
      <<-EOS
Shortform:
  rg?
Subcommands:
  rg? :pipe
      EOS
    end

    def pipe_help_message
      pipes = RedGrape::Pipe.constants.map(&:to_s).select{|p| 
        p =~ /.*Pipe$/}.map{|p| underscore p.sub(/Pipe$/, '')}
      "Available pipes: #{pipes.sort.join ', '}"
    end

    def underscore(str)
      str.sub(/^[A-Z]/){|p| p.downcase}.gsub(/([a-z])([A-Z])/){"#{$1}_#{$2.downcase}"}
    end

    def camelcase(str)
      str.sub(/^[a-z]/){|p| p.upcase}.gsub(/_([a-z])/){"#{$1.upcase}"}
    end
  end
end

RedGrape.set_auto_take

def redgrape?(key=nil)
  RedGrape::Help.redgrape? key
end
alias rg? redgrape?

puts %Q{                T
              ooooo
-------------  ooo  -------------
         RED    o   GRAPE
---------------------------------
 Type 'redgrape?' to show helps
---------------------------------
}
IRB.start
