{"name":"Red-grape","tagline":"Extremely Simple Graph DB","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"RedGrape is an in-memory graph database written in ruby. I made this application in order to learn how a graph database works so that please do not use this for any serious purpose.\r\n\r\n## Features/Problems:\r\n\r\n* REPL\r\n* load GraphML\r\n* construct a graph programmatically\r\n* traverse nodes and edges using a gremlin-like DSL\r\n* REST API\r\n* Graph viewer (in progress)\r\n\r\n## Synopsis:\r\n\r\n    g1 = RedGrape.load_graph 'data/graph-example-1.xml'\r\n    g1.v(1).out('knows').filter{it.age < 30}.name.transform{it.size}.take\r\n    # => [5]\r\n\r\n    g2 = RedGrape.load_graph 'data/graph-example-2.xml'\r\n    g2.v(89).as('x').outE.inV.loop('x'){it.loops < 3}.path.take\r\n    # => [[v[89], e[7006][89-followed_by->127], v[127], e[7786][127-sung_by->340], v[340]], [v[89], \r\n\r\n## REPL:\r\n\r\n    $ bin/redgrape\r\n             T\r\n           oOOOo\r\n            oOo\r\n    -------- O --------\r\n    irb(main):001:0> g = RedGrape.create_tinker_graph\r\n     => redgrape[vertices:6 edges:6] \r\n    irb(main):002:0> g.class\r\n     => RedGrape::Graph \r\n    irb(main):003:0> g.V\r\n     => [v[1], v[2], v[3], v[4], v[5], v[6]] \r\n    irb(main):004:0> g.V.name\r\n     => [\"marko\", \"vadas\", \"lop\", \"josh\", \"ripple\", \"peter\"] \r\n    irb(main):005:0> g.E\r\n     => [e[7][1-knows->2], e[8][1-knows->4], e[9][1-created->3], e[10][4-created->5], e[11][4-created->3], e[12][6-created->3]] \r\n    irb(main):006:0> v = g.v(1)\r\n     => v[1] \r\n    irb(main):007:0> \"#{v.name} is #{v.age} years old.\"\r\n     => \"marko is 29 years old.\" \r\n    irb(main):008:0> v.out\r\n     => [v[2], v[4], v[3]] \r\n    irb(main):009:0> v.out('knows')\r\n     => [v[2], v[4]] \r\n    irb(main):010:0> v.outE\r\n     => [e[7][1-knows->2], e[8][1-knows->4], e[9][1-created->3]] \r\n    irb(main):011:0> v.outE('knows')\r\n     => [e[7][1-knows->2], e[8][1-knows->4]] \r\n    irb(main):012:0> v.outE.weight\r\n     => [0.5, 1.0, 0.4] \r\n    irb(main):013:0> v.outE.has('weight', :lt, 1).inV\r\n     => [v[2], v[3]] \r\n    irb(main):014:0> v.outE.filter{it.weight < 1}.inV\r\n     => [v[2], v[3]] \r\n    irb(main):015:0> v.out('knows').filter{it.age:0> 30}.out('created').name\r\n     => [\"ripple\", \"lop\"] \r\n\r\nIn REPL, the `take' method which invokes all pipes is automatically called.\r\n\r\n## Server/Client:\r\n\r\n### Server:\r\n\r\n    $ ./bin/trellis\r\n      +=================+\r\n      |  +     T     +  |\r\n      | oOo  oOOOo  oOo |\r\n      |  8    oOo    8  |\r\n      |        O        |       \r\n    Start server: druby://localhost:28282\r\n    [Ctrl+C to stop]\r\n\r\n### Client:\r\n\r\n    $ ./bin/redgrape \r\n             T\r\n           oOOOo\r\n            oOo\r\n    -------- O --------\r\n    irb(main):001:0> $store\r\n     => #<RedGrape::GraphStore:0x007fb615137a90> \r\n    irb(main):002:0> $store.graphs\r\n     => [:tinker] \r\n    irb(main):003:0> g = $store.graph :tinker\r\n     => redgrape[vertices:6 edges:6] \r\n    irb(main):004:0> g.add_vertex 7\r\n     => redgrape[vertices:7 edges:6] \r\n    irb(main):005:0> store.put_graph :tinker, g\r\n     => redgrape[vertices:7 edges:6] \r\n\r\nChanges on a graph are not committed until the put_graph method is called.\r\n\r\n## REST API:\r\n\r\n### Server: \r\n\r\n    $ ./bin/juicer \r\n    [2012-06-30 02:03:01] INFO  WEBrick 1.3.1\r\n    [2012-06-30 02:03:01] INFO  ruby 1.9.3 (2011-10-30) [x86_64-darwin11.0.1]\r\n    == Sinatra/1.3.2 has taken the stage on 4567 for development with backup from WEBrick\r\n    [2012-06-30 02:03:01] INFO  WEBrick::HTTPServer#start: pid=12098 port=4567\r\n\r\n### Use from Console:\r\n\r\n    $ curl http://localhost:4567/\r\n    {\r\n      \"version\": \"0.1.0\",\r\n      \"supportedPaths\": {\r\n        \"GET\": [\r\n          \"/graphs\",\r\n          \"/graphs/[graph]\",\r\n          \"/graphs/[graph]/vertices\",\r\n          \"/graphs/[graph]/vertices?key=[key]&value=[value]\",\r\n          \"/graphs/[graph]/vertices/[vertex]\",\r\n          \"/graphs/[graph]/vertices/[vertex]/out\",\r\n          ...\r\n        ],\r\n        \"POST\": [\r\n          ...\r\n        ],\r\n        \"PUT\": [\r\n          ...\r\n        ],\r\n        \"DELETE\": [\r\n          ...\r\n        ]\r\n      }\r\n    }\r\n\r\n    $ curl http://localhost:4567/graphs\r\n    {\r\n      \"version\": \"0.1.0\",\r\n      \"name\": \"Juicer: A Graph Server\",\r\n      \"graphs\": [\r\n        \"tinkergraph\"\r\n      ]\r\n    }\r\n\r\n    $ curl http://localhost:4567/graphs/tinkergraph/vertices/1\r\n    {\r\n      \"version\": \"0.1.0\",\r\n      \"results\": {\r\n        \"_type\": \"_vertex\",\r\n        \"_id\": \"1\",\r\n        \"name\": \"marko\",\r\n        \"age\": 29\r\n      }\r\n    }\r\n\r\n### Use from Browser:\r\n\r\n    http://localhost:4567/cellar/index.html\r\n\r\n![Screenshot](https://raw.github.com/technohippy/red-grape/master/public/image/cellar.png)\r\n\r\n## Requirements:\r\n\r\n* Nokogiri (http://nokogiri.org/)\r\n* Sinatra (http://www.sinatrarb.com/)\r\n\r\n## Developers:\r\n\r\nafter checking out the source, run:\r\n\r\n    $ rake newb\r\n\r\nThis task will install any missing dependencies, run the tests/specs,\r\nand generate the RDoc.\r\n\r\n## References:\r\n\r\n* [Gremlin](https://github.com/tinkerpop/gremlin/wiki/)\r\n* [Pipes](https://github.com/tinkerpop/pipes/wiki/)\r\n* [Rexter](https://github.com/tinkerpop/rexster/wiki/)\r\n\r\n## License:\r\n\r\n(The MIT License)\r\n\r\nCopyright (c) 2012 ANDO Yasushi\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n'Software'), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","google":""}